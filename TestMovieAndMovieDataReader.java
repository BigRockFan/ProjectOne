                List<MovieInterface> movieList;
                try {
                        movieList = readerToTest.readDataSet(new StringReader(
                                        "title,original_title,year,genre,duration,country,language,director,writer,production_company,actors,description,avg_vote\n"
                                        + "The Source of Shadows,The Source of Shadows,2020,Horror,83,USA,English,\"Ryan Bury, Jennifer Bonior\",\"Jennifer Bonior, Trevor Botkin\",Four Thieves Productions,\"Ashleigh Allard, Tom Bonington, Eliane Gagnon, Marissa Kaye Grinestaff, Jenna Heffernan, Joshua Hummel, Janice Kingsley, Chris Labasbas, Jared Laufree, Dominic Lee, Vic May, Sienna Mazzone, Lizzie Mounter, Grace Mumm, Ashley Otis\",\"A series of stories woven together by one of our most primal fears, the fear of the unknown.\",3.5\n"
                                        + "The Insurrection,The Insurrection,2020,Action,90,USA,English,Rene Perez,Rene Perez,,\"Michael Paré, Wilma Elles, Joseph Camilleri, Rebecca Tarabocchia, Jeanine Harrington, Malorie Glavan, Danner Boyd, Michael Cendejas, Woody Clendenen, Keely Dervin, Aaron Harvey, Tony Jackson, Michael Jarrod, Angelina Karo, Bernie Kelly\",The director of the largest media company wants to expose how left-wing powers use film to control populations.,2.9\n"
                                        + "Valley Girl,Valley Girl,2020,\"Comedy, Musical, Romance\",102,USA,English,Rachel Lee Goldenberg,\"Amy Talkington, Andrew Lane\",Sneak Preview Productions,\"Jessica Rothe, Josh Whitehouse, Jessie Ennis, Ashleigh Murray, Chloe Bennet, Logan Paul, Mae Whitman, Mario Revolori, Rob Huebel, Judy Greer, Alex Lewis, Alex MacNicoll, Danny Ramirez, Andrew Kai, Allyn Rachel\",\"Set to a new wave '80s soundtrack, a pair of young lovers from different backgrounds defy their parents and friends to stay together. A musical adaptation of the 1983 film.\",5.4\n"
                        ));
                } catch (Exception e) {
                        e.printStackTrace();
                        // test failed
                        return false;
                }
                if (movieList.size() == 3) {
                        // test passed
                        return true;
                } else {
                        // test failed                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                
                        return false;
                }
        }


         * This test reads in 3 movies and tests whether the list of movies
         * contains all 3 titles of the source data in any order. It fails
         * if the list returned is missing one or more titles or if an                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                
         * exception occurs while reading in the data
         * @return true if the test passed, false if it failed
         */
        public boolean testReaderMovieTitles() {
                List<MovieInterface> movieList;
                try {
                        movieList = readerToTest.readDataSet(new StringReader(
                                        "title,original_title,year,genre,duration,country,language,director,writer,production_company,actors,description,avg_vote\n"
                                        + "The Source of Shadows,The Source of Shadows,2020,Horror,83,USA,English,\"Ryan Bury, Jennifer Bonior\",\"Jennifer Bonior, Trevor Botkin\",Four Thieves Productions,\"Ashleigh Allard, Tom Bonington, Eliane Gagnon, Marissa Kaye Grinestaff, Jenna Heffernan, Joshua Hummel, Janice Kingsley, Chris Labasbas, Jared Laufree, Dominic Lee, Vic May, Sienna Mazzone, Lizzie Mounter, Grace Mumm, Ashley Otis\",\"A series of stories woven together by one of our most primal fears, the fear of the unknown.\",3.5\n"
                                        + "The Insurrection,The Insurrection,2020,Action,90,USA,English,Rene Perez,Rene Perez,,\"Michael Paré, Wilma Elles, Joseph Camilleri, Rebecca Tarabocchia, Jeanine Harrington, Malorie Glavan, Danner Boyd, Michael Cendejas, Woody Clendenen, Keely Dervin, Aaron Harvey, Tony Jackson, Michael Jarrod, Angelina Karo, Bernie Kelly\",The director of the largest media company wants to expose how left-wing powers use film to control populations.,2.9\n"
                                        + "Valley Girl,Valley Girl,2020,\"Comedy, Musical, Romance\",102,USA,English,Rachel Lee Goldenberg,\"Amy Talkington, Andrew Lane\",Sneak Preview Productions,\"Jessica Rothe, Josh Whitehouse, Jessie Ennis, Ashleigh Murray, Chloe Bennet, Logan Paul, Mae Whitman, Mario Revolori, Rob Huebel, Judy Greer, Alex Lewis, Alex MacNicoll, Danny Ramirez, Andrew Kai, Allyn Rachel\",\"Set to a new wave '80s soundtrack, a pair of young lovers from different backgrounds defy their parents and friends to stay together. A musical adaptation of the 1983 film.\",5.4\n"
                        ));
                } catch (Exception e) {
                        e.printStackTrace();
                        // test failed
                        return false;
                }
                String title1 = "The Source of Shadows";
                String title2 = "The Insurrection";
                String title3 = "Valley Girl";
                boolean equalOne = true;
                // check if first movie is has of the above titles
                equalOne = equalOne && (title1.equals(movieList.get(0).getTitle()) ||
                                                                title2.equals(movieList.get(0).getTitle()) ||
                                                                title3.equals(movieList.get(0).getTitle()));
                // check if second movie is has of the above titles
                equalOne = equalOne && (title1.equals(movieList.get(1).getTitle()) ||
                                                                title2.equals(movieList.get(1).getTitle()) ||
                                                                title3.equals(movieList.get(1).getTitle()));
                // check if third movie is has of the above titles
                equalOne = equalOne && (title1.equals(movieList.get(2).getTitle()) ||
                                                                title2.equals(movieList.get(2).getTitle()) ||
                                                                title3.equals(movieList.get(2).getTitle()));
                // true if the three movies have the right titles
                return equalOne;
        }


         * This test reads in 3 movies, then sorts them. It then checks whether
         * the default sorting order is descending based on the average ratings
         * @return true if the test passed, false if it failed
         */
        public boolean testMovieOrder() {
                List<MovieInterface> movieList;
                try {
                        movieList = readerToTest.readDataSet(new StringReader(
                                        "title,original_title,year,genre,duration,country,language,director,writer,production_company,actors,description,avg_vote\n"
                                        + "The Source of Shadows,The Source of Shadows,2020,Horror,83,USA,English,\"Ryan Bury, Jennifer Bonior\",\"Jennifer Bonior, Trevor Botkin\",Four Thieves Productions,\"Ashleigh Allard, Tom Bonington, Eliane Gagnon, Marissa Kaye Grinestaff, Jenna Heffernan, Joshua Hummel, Janice Kingsley, Chris Labasbas, Jared Laufree, Dominic Lee, Vic May, Sienna Mazzone, Lizzie Mounter, Grace Mumm, Ashley Otis\",\"A series of stories woven together by one of our most primal fears, the fear of the unknown.\",3.5\n"
                                        + "The Insurrection,The Insurrection,2020,Action,90,USA,English,Rene Perez,Rene Perez,,\"Michael Paré, Wilma Elles, Joseph Camilleri, Rebecca Tarabocchia, Jeanine Harrington, Malorie Glavan, Danner Boyd, Michael Cendejas, Woody Clendenen, Keely Dervin, Aaron Harvey, Tony Jackson, Michael Jarrod, Angelina Karo, Bernie Kelly\",The director of the largest media company wants to expose how left-wing powers use film to control populations.,2.9\n"
                                        + "Valley Girl,Valley Girl,2020,\"Comedy, Musical, Romance\",102,USA,English,Rachel Lee Goldenberg,\"Amy Talkington, Andrew Lane\",Sneak Preview Productions,\"Jessica Rothe, Josh Whitehouse, Jessie Ennis, Ashleigh Murray, Chloe Bennet, Logan Paul, Mae Whitman, Mario Revolori, Rob Huebel, Judy Greer, Alex Lewis, Alex MacNicoll, Danny Ramirez, Andrew Kai, Allyn Rachel\",\"Set to a new wave '80s soundtrack, a pair of young lovers from different backgrounds defy their parents and friends to stay together. A musical adaptation of the 1983 film.\",5.4\n"
                        ));
                } catch (Exception e) {
                        e.printStackTrace();
                        // test failed
                        return false;
                }
                Collections.sort(movieList);
                double lastRating = 11.0;
                for (MovieInterface movie : movieList) {
                        if (movie.getAvgVote() > lastRating) {
                                // test fails
                                return false;
                        }
                        lastRating = movie.getAvgVote();
                }
                // test passes
                return true;
        }

        // TODO: Data Wrangler, add at least 2 more tests

        *This test reads in 3 movies and checks that the getter methods(all but the getName()) are correct
        *@return true if the test passed, false if it failed
        */
        public boolean testGetters(){
                List<MovieInterface> movieList;
                try {
                        movieList = readerToTest.readDataSet(new StringReader(
                                "title,original_title,year,genre,duration,country,language,director,writer,production_company,actors,description,avg_vote\n"
                                + "The Source of Shadows,The Source of Shadows,2020,Horror,83,USA,English,\"Ryan Bury, Jennifer Bonior\",\"Jennifer Bonior, Trevor Botkin\",Four Thieves Productions,\"Ashleigh Allard, Tom Bonington, Eliane Gagnon, Marissa Kaye Grinestaff, Jenna Heffernan, Joshua Hummel, Janice Kingsley, Chris Labasbas, Jared Laufree, Dominic Lee, Vic May, Sienna Mazzone, Lizzie Mounter, Grace Mumm, Ashley Otis\",\"A series of stories woven together by one of our most primal fears, the fear of the unknown.\",3.5\n"
                                + "The Insurrection,The Insurrection,2020,Action,90,USA,English,Rene Perez,Rene Perez,,\"Michael Paré, Wilma Elles, Joseph Camilleri, Rebecca Tarabocchia, Jeanine Harrington, Malorie Glavan, Danner Boyd, Michael Cendejas, Woody Clendenen, Keely Dervin, Aaron Harvey, Tony Jackson, Michael Jarrod, Angelina Karo, Bernie Kelly\",The director of the largest media company wants to expose how left-wing powers use film to control populations.,2.9\n"
                                + "Valley Girl,Valley Girl,2020,\"Comedy, Musical, Romance\",102,USA,English,Rachel Lee Goldenberg,\"Amy Talkington, Andrew Lane\",Sneak Preview Productions,\"Jessica Rothe, Josh Whitehouse, Jessie Ennis, Ashleigh Murray, Chloe Bennet, Logan Paul, Mae Whitman, Mario Revolori, Rob Huebel, Judy Greer, Alex Lewis, Alex MacNicoll, Danny Ramirez, Andrew Kai, Allyn Rachel\",\"Set to a new wave '80s soundtrack, a pair of young lovers from different backgrounds defy their parents and friends to stay together. A musical adaptation of the 1983 film.\",5.4\n"
                        ));
                 } catch (Exception e) {
                        e.printStackTrace();
                        // test failed
                        return false;
                }
                Integer m1Yr = Integer.valueOf(2020);
                Integer m2Yr = Integer.valueOf(2020);
                Integer m3Yr = Integer.valueOf(2020);
                if (m1Yr != movieList.get(0).getYear() || m2Yr != movieList.get(1).getYear()|| m3Yr != movieList.get(2).getYear()) return false;
                boolean genreWrong = false;
                List<String> m1G = new ArrayList<String>();
                m1G.add("Horror");
                List<String> m2G = new ArrayList<String>();
                m2G.add("Action");
                List<String> m3G = new ArrayList<String>();
                m3G.add("Comedy"); m3G.add("Musical"); m3G.add("Romance");
                for (int i = 0; i < m1G.size(); i++){
                        if (!m1G.get(i).equals(movieList.get(i).getGenres().get(i))) genreWrong = true;
                }
                for (int i = 0; i < m2G.size(); i++){
                        if (!m2G.get(i).equals(movieList.get(i).getGenres().get(i))) genreWrong = true;
                }
                for (int i = 0; i < m3G.size(); i++){
                        if (!m3G.get(i).equals(movieList.get(i).getGenres().get(i))) genreWrong = true;
                }
                if (genreWrong) return false;
                String m1Dir = "Ryan Bury, Jennifer Bonior";
                String m2Dir = "Rene Perez";
                String m3Dir = "Rachel Lee Goldenberg";
                if (!m1Dir.equals(movieList.get(0).getDirector()) || !m2Dir.equals(movieList.get(1).getDirector())|| !m3Dir.equals(movieList.get(2).getDirector())) return false;
                String m1Des = "A series of stories woven together by one of our most primal fears, the fear of the unknown.";
                String m2Des = "The director of the largest media company wants to expose how left-wing powers use film to control populations.";
                String m3Des = "Set to a new wave '80s soundtrack, a pair of young lovers from different backgrounds defy their parents and friends to stay together. A musical adaptation of the 1983 film.";
                if (!m1Des.equals(movieList.get(0).getDescription()) || !m2Des.equals(movieList.get(1).getDescription())|| !m3Des.equals(movieList.get(2).getDescription())) return false;
                Float m1V = 3.5f;
                Float m2V = 2.9f;
                Float m3V = 5.4f;
                if (Float.compare(movieList.get(0).getAvgVote(),m1V) != 0) return false;
                return true;
         }

        /**                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
        * This method tests that the compareTo() methods works as intended
        * @return true if the test passed, false if it failed                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
        */
        public boolean testCompareTo(){
                List<MovieInterface> movieList;
                 try {
                        movieList = readerToTest.readDataSet(new StringReader(
                                "title,original_title,year,genre,duration,country,language,director,writer,production_company,actors,description,avg_vote\n"
                                + "The Source of Shadows,The Source of Shadows,2020,Horror,83,USA,English,\"Ryan Bury, Jennifer Bonior\",\"Jennifer Bonior, Trevor Botkin\",Four Thieves Productions,\"Ashleigh Allard, Tom Bonington, Eliane Gagnon, Marissa Kaye Grinestaff, Jenna Heffernan, Joshua Hummel, Janice Kingsley, Chris Labasbas, Jared Laufree, Dominic Lee, Vic May, Sienna Mazzone, Lizzie Mounter, Grace Mumm, Ashley Otis\",\"A series of stories woven together by one of our most primal fears, the fear of the unknown.\",3.5\n"
                                + "The Insurrection,The Insurrection,2020,Action,90,USA,English,Rene Perez,Rene Perez,,\"Michael Paré, Wilma Elles, Joseph Camilleri, Rebecca Tarabocchia, Jeanine Harrington, Malorie Glavan, Danner Boyd, Michael Cendejas, Woody Clendenen, Keely Dervin, Aaron Harvey, Tony Jackson, Michael Jarrod, Angelina Karo, Bernie Kelly\",The director of the largest media company wants to expose how left-wing powers use film to control populations.,2.9\n"
                                + "Valley Girl,Valley Girl,2020,\"Comedy, Musical, Romance\",102,USA,English,Rachel Lee Goldenberg,\"Amy Talkington, Andrew Lane\",Sneak Preview Productions,\"Jessica Rothe, Josh Whitehouse, Jessie Ennis, Ashleigh Murray, Chloe Bennet, Logan Paul, Mae Whitman, Mario Revolori, Rob Huebel, Judy Greer, Alex Lewis, Alex MacNicoll, Danny Ramirez, Andrew Kai, Allyn Rachel\",\"Set to a new wave '80s soundtrack, a pair of young lovers from different backgrounds defy their parents and friends to stay together. A musical adaptation of the 1983 film.\",5.4\n"
                        ));
                 } catch (Exception e) {
                        e.printStackTrace();
                        // test failed
                        return false;
                 }
                List<String> testMovie = new ArrayList<String>();
                testMovie.add("Horror");
                Movie m1 = new Movie("The Source of Shadows",2020,testMovie,"Ryan Bury, Jennifer Bonior","A series of stories woven together by one of our most primal fears, the fear of the unknown.",3.5);
                Movie m2 = new Movie("Different",2020,testMovie,"Ryan Bury, Jennifer Bonior","A series of stories woven together by one of our most primal fears, the fear of the unknown.",3.5);
                if (m1.compareTo(m2) <= 0) return false;
                if (movieList.get(0).compareTo(m1) != 0) return false;
                return true;
        }
}



